// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// table setup
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int   
  blogPosts Blog[]
  comments  Comment[]

  @@index([email])
}

model Blog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  title     String   @unique
  content   String   @db.Text
  isPublic  Boolean  @default(false)
  slug      String   @unique          // URL-friendly title
  views     Int      @default(0)
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId    Int
  parentId  Int?
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Comment[] @relation("CommentReplies")
}

model Role {
  id            Int        @id @default(autoincrement())
  title         String     @unique
  canComment    Boolean    @default(true)
  canCreateBlog Boolean    @default(false)
  canModerate   Boolean    @default(false)
  isAdmin       Boolean    @default(false)
  users         User[]
}